<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<resultMap id="memberResult" type="Member">
		<result column="mem_no" property="memNo"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_pwd" property="memPwd"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_post" property="memPost"/>
		<result column="mem_basic_address" property="memBasicAddress"/>
		<result column="mem_detail_address" property="memDetailAddress"/>
		<result column="mem_address_refer" property="memAddressRefer"/>
		<result column="mem_gender" property="memGender"/>
		<result column="mem_age" property="memAge"/>
		<result column="mem_phone" property="memPhone"/>
		<result column="mem_email" property="memEmail"/>
		<result column="email_status" property="emailStatus"/>
		<result column="mem_status" property="memStatus"/>
		<result column="mem_nickname" property="memNickname"/>
		<result column="mem_work" property="memWork"/>
		<result column="mem_level" property="memLevel"/>
		<result column="mem_enrolldate" property="memEnrolldate"/>
		<result column="black_reason" property="blackReason"/>
		<result column="black_date" property="blackDate"/>
		<result column="report_count" property="reportCount"/>
		<result column="origin_img_name" property="originImgName"/>
		<result column="change_img_name" property="changeImgName"/>
	</resultMap>
	
	<resultMap id="memberInterestResult" type="MemberInterest">
		<result column="mem_no" property="memNo"/>
		<result column="interest_no" property="interestNo"/>
		<result column="interest_content" property="interestContent"/>
	</resultMap>
	
	<resultMap id="memberCategoryResult" type="MemberCategory">
		<result column="mem_no" property="memNo"/>
		<result column="sub_cate_no" property="subCategoryNo"/>
		<result column="sub_cate_name" property="subCateName"/>
	</resultMap>
	
	<resultMap id="couponResult" type="Coupon">
		<result column="coupon_issue_num" property="couponIssueNum"/>
		<result column="coupon_no" property="couponNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="coupon_kind" property="couponKind"/>
		<result column="create_date" property="createDate"/>
		<result column="expire_date" property="expireDate"/>
		<result column="status" property="status"/>
		<result column="use_date" property="useDate"/>
		<result column="coupon_name" property="couponName"/>
		<result column="coupon_category" property="couponCategory"/>
		<result column="coupon_price" property="couponPrice"/>
		<result column="coupon_pricerate" property="couponPriceRate"/>
	</resultMap>
	
	<resultMap id="memberPhonebookResult" type="MemberPhonebook">
		<result column="phone_no" property="phoneNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="name" property="name"/>
		<result column="post_no" property="postNo"/>
		<result column="basic_address" property="basicAddress"/>
		<result column="detail_address" property="detailAddress"/>
		<result column="address_refer" property="addressRefer"/>
		<result column="phone" property="phone"/>
		<result column="mem_name" property="memName"/>
	</resultMap>
	
	<resultMap id="pointResult" type="Point">
		<result column="point_no" property="pointNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="order_no" property="orderNo"/>
		<result column="subsc_no" property="subscNo"/>
		<result column="point_content" property="pointContent"/>
		<result column="point_price" property="pointPrice"/>
		<result column="occurrence_date" property="occurrenceDate"/>
	</resultMap>
  	
  	<!-- [사용자] 비밀번호 암호화 적용 전 로그인 메서드(안세아) -->
  	<select id="loginMember" resultMap="memberResult">
  		select
    		mem_no,
    		mem_id,
    		mem_pwd,
    		mem_name,
    		mem_post,
    		mem_basic_address,
    		mem_detail_address,
    		mem_address_refer,
    		mem_gender,
    		mem_age,
    		mem_phone,
    		mem_email,
    		email_status,
    		mem_status,
    		mem_nickname,
    		mem_work,
    		mem_level,
    		mem_enrolldate,
    		black_reason,
    		black_date,
    		report_count,
    		origin_img_name,
    		change_img_name
		from members
		where 
  			mem_id = #{memId}
    		and email_status = 'Y'
    		and not mem_status = 'N'
  	</select>
  	  	
  	
  	<!-- [사용자] 아이디 중복 확인 메서드(안세아) -->
  	<select id="idCheck" resultType="_int">
  		select
    		count(*)
		from members
		where 
  			mem_id = #{memId}
  	</select>
  	
  	<!-- [사용자] 닉네임 중복 확인 메서드(안세아) -->
  	<select id="nickCheck" resultType="_int">
  		select
    		count(*)
		from members
		where 
  			mem_nickname = #{memNickname}
  	</select>
  	
  	<!-- [사용자] 이메일 중복 확인 메서드(안세아) -->
  	<select id="emailCheck" resultType="_int">
  		select
    		count(*)
		from members
		where 
  			mem_email = #{memEmail}
  	</select>
  	
  	<!-- [사용자] 가입 메서드(안세아) -->
  	<insert id="insertMember">
  		insert 
  		into members(
  			mem_no,
    		mem_id,
    		mem_pwd,
    		mem_name,
    		mem_post,
    		mem_basic_address,
    		mem_detail_address,
    		mem_address_refer,
    		mem_gender,
    		mem_age,
    		mem_phone,
    		mem_email,
    		email_status,
    		mem_status,
    		mem_nickname,
    		mem_work,
    		mem_level
  		)values(
  			seq_mem.nextval,
  			#{memId},
  			#{memPwd},
  			#{memName},
  			#{memPost},
  			#{memBasicAddress},
  			#{memDetailAddress},
  			#{memAddressRefer},
  			#{memGender},
  			#{memAge},
  			#{memPhone},
  			#{memEmail},
  			#{emailStatus},
  			#{memStatus},
  			#{memNickname},
  			#{memWork},
  			#{memLevel}
  		)
  	</insert>
  	
  	<!-- [사용자] 이메일 확인값 업데이트 메서드(안세아) -->
  	<update id="updateEmailStatus">
  		update members
			set
			 email_status = #{emailStatus}
		where mem_email = #{memEmail}
  	</update>
  	
  	<!-- [사용자] 아이디로 멤버 조회해오는 메서드(안세아) -->
  	<select id="selectMemberById" resultType="_int">
  		select 
  			mem_no
  		from members
  		where 
  			mem_id = #{memId}
  	</select>
  	
  	<!-- [사용자] 관심사 추가하는 메서드(안세아) -->
  	<insert id="insertMemberInterest">
  		insert
  		into mem_interest(
  			mem_no,
  			interest_no
  		)values(
  			#{memNo},
  			#{interestNo}
  		)
  	</insert>
  	
  	<!-- [사용자] 관심 서브 카테고리 추가하는 메서드(안세아) -->
  	<insert id="insertMemberCategory">
  		insert
  		into mem_category(
  			mem_no,
  			sub_cate_no
  		)values(
  			#{memNo},
  			#{subCategoryNo}
  		)
  	</insert>
  	
  	<!-- [사용자] 이메일과 이메일 상태 가져오는 메서드(안세아) -->
  	<select id="selectEmailAndAuthKey" resultMap="memberResult">
  		select mem_email,
    		email_status
    	from members
    	where mem_email=#{memEmail}
    	and email_status = #{emailStatus}
  	</select>
  	
  	<!-- [사용자] 이메일값으로 멤버의 아이디, 메일 가져오는 메서드(안세아) -->
  	<select id="selectMemberByEmail" resultMap="memberResult">
  		select mem_id, mem_email
  		from members
  		where mem_email = #{memEmail}
  		and not mem_status = 'N'
  	</select>
  	
  	<!-- [사용자] 이메일 값과 id로 멤버의 정보 가여오는 메서드(안세아) -->
  	<select id="selectMemberByEmailAndId" resultMap="memberResult">
  		select mem_id, mem_email, mem_pwd, mem_no
  		from members
  		where mem_email = #{memEmail}
  		and mem_id = #{memId}
  		and not mem_status = 'N'
  	</select>
  	
  	<!-- [사용자] 멤버의 비밀번호 업데이트하는 메서드 -->
  	<update id="updatePassword">
  		update members
  		set
  		 mem_pwd = #{memPwd}
  		where mem_id = #{memId} and mem_email = #{memEmail}
  	</update>
  	
  	<!-- [관리자] 주문 상세 조회 - 주문한 회원 조회 (한진) -->
  	<select id="selectAdminOrderedMem" resultMap="memberResult">
  		select 
  		       mem_no,
  			   mem_id,
  			   mem_name,
  			   mem_phone,
  			   mem_email
  		  from members
  		  join orders using (mem_no)
  		 where order_no = #{orderNo}
	</select>
	
  	<!-- [사용자] 소지 쿠폰 개수 조회 (연지) -->
  	<select id="selectCouponCount" resultType="_int">
  		select
    		   count(*)
		  from mem_coupon
		 where mem_no = #{memNo}
  	</select>
  	
  	<!-- [사용자] 소지 쿠폰 조회 (연지) -->
  	<select id="selectCouponList" resultMap="couponResult">
  		select
    		   coupon_issue_num,
    		   coupon_no,
    		   mem_no,
    		   mc.coupon_kind,
    		   create_date,
    		   expire_date,
    		   status,
    		   use_date,
               coupon_name,
               c.coupon_kind coupon_category,
               coupon_price,
               coupon_pricerate
		  from mem_coupon mc
          join coupon c using (coupon_no)
		 where mem_no = 3
           and status = 'Y'
  	</select>
  	
  	<!-- 관리자 회원조회 (형우) -->
  	<select id="selectListCount" resultType="_int">
  		select
  				count(*)
  			from members
  			where mem_status = 'M'
  	</select>
  	
  	<select id="selectAmemList" resultMap="memberResult">
  		select
  				mem_no,
  				mem_id,
  				mem_pwd,
  				mem_name,
  				mem_email,
  				mem_basic_address,
  				mem_enrolldate
  			from members
  		   where mem_status = 'M'
  		   order
  		   		by mem_no asc
  	</select>
  	
  	<!-- 관리자 회원검색 (형우) -->
  	<select id="selectSearchListCount" resultType="_int">
		select
		       count(*)
		  from members
		 where mem_status = 'M'
	 	<choose>
	 		<when test="condition == 'searchAll'">
	 			and (mem_no like '%' || #{keyword} || '%'
				   or mem_name like '%' || #{keyword} || '%')
				   or mem_id
	 		</when>
	 		<when test="condition == 'memName'">
				  and mem_name
			</when>
	 		<when test="condition == 'memId'">
	 			and mem_id
	 		</when>		
	 	</choose>	 	
	 		like '%' || #{keyword} || '%'	 		 	
	</select>
	
	<select id="selectSearchAmemList" resultMap="memberResult">
		select	
				mem_no,
  				mem_id,
  				mem_pwd,
  				mem_name,
  				mem_email,
  				mem_basic_address,
  				mem_enrolldate
  			from members
  		   where mem_status = 'M'

		 <choose>
		 	<when test="condition == 'searchAll'">
				and (mem_no like '%' || #{keyword} || '%'
				   or mem_name like '%' || #{keyword} || '%')
				   or mem_id
			</when>
	 		<when test="condition == 'memName'">
	 			and mem_Name
	 		</when>
	 		<when test="condition == 'memId'">
	 			and mem_id
	 		</when>
	 		
	 	</choose>
	 			like '%' || #{keyword} || '%'
		 order
  		   		by mem_no asc
	</select>
  		   	
  	<!-- 관리자 회원탈퇴 처리 (형우) -->
  	<update id="amDelete">
  		update
  			  member
  		   set mem_status = 'N'
  		 where mem_id = #{memId}
  	</update>
	
	<!-- 관리자 회원상세조회 (형우)-->
		
	<select id="selectAmemDetail" resultMap="memberResult">
		select
		       mem_no
		     , mem_id
		     , mem_name
		     , mem_age
		     , mem_gender
		     , mem_basic_address
		     , mem_detail_address
		     , mem_email
		     , mem_phone
		     , mem_status
		     , mem_enrolldate		     
		  from members
		 where mem_no = #{memNo}
	</select>
	<!-- 블랙리스트 조회 -->
	<select id="selectBlackListCount" resultType="_int">
  		select
  				count(*)
  			from members
  			where mem_status = 'N'
  	</select>
  	<select id="selectBlackList" resultMap="memberResult">
  		select
  				mem_no,
  				mem_id, 				
  				mem_name,
  				mem_email,
  				mem_enrolldate,
  				black_reason
  			from members
  		   where mem_status = 'N'
  		   order
  		   		by mem_no asc
  	</select>
  	
  	<!--  블랙리스트 추가 (형우) -->
  	<update id="blackMember">
		update
		       members
		   set mem_status = 'N'
		 where mem_no = #{memNo}
	</update>
	
	<!-- 블랙리스트 검색 -->
	<select id="selectBlackSearchListCount" resultType="_int">
		select
		       count(*)
		  from members
		 where mem_status = 'N'
	 	<choose> 		
	 		<when test="condition == 'memName'">
	 			and mem_name
	 		</when>
	 		<when test="condition == 'memId'">
	 			and mem_id
	 		</when>
	 		<otherwise>
	 			and mem_email
	 		</otherwise>		
	 	</choose>	 	
	 		like '%' || #{keyword} || '%'	 		 	
	</select>
	<!-- 블랙리스트 삭제 -->
	<update id="deleteBlack">
		update
		       members
		   set mem_status = 'M'
		 where mem_no = #{memNo}
	</update>
	
	<select id="selectBlackSearchList" resultMap="memberResult">
		select	
				mem_no,
  				mem_id, 				
  				mem_name,
  				mem_email,
  				mem_enrolldate,
  				black_reason
  			from members
  		   where mem_status = 'N'
		 <choose>		 	
	 		<when test="condition == 'memName'">
	 			and mem_name
	 		</when>
	 		<when test="condition == 'memId'">
	 			and mem_id
	 		</when>
	 		<otherwise>
	 			and mem_email
	 		</otherwise>	 		
	 	</choose>
	 			like '%' || #{keyword} || '%'
		 order
  		   		by mem_no asc
	</select>
	
  	<!-- [사용자] 선호 관심사 삭제 (안세아) -->
  	<delete id="deleteAllMemInterest">
  		delete
  		from mem_interest
  		where mem_no = #{memNo}
  	</delete>
  	
  	<!-- [사용자] 선호 카테고리 삭제 (안세아) -->
  	<delete id="deleteAllMemCategory">
  		delete
  		from mem_category
  		where mem_no = #{memNo}
  	</delete>
  	
  	<!-- [사용자] 직업과 책 선호난이도 바꾸기(안세아) -->
  	<update id="updateMemberWorkAndLevel">
  		update members
  		set 
  			mem_work = #{memWork},
  			mem_level = #{memLevel}
  		where 
  			mem_no = #{memNo}
  	</update>
 	
 	<!-- [사용자] 관심사 리스트 가져오기(안세아) -->
 	<select id="selectMemberInterestList" parameterType="int" resultMap="memberInterestResult">
 		select mem_no, interest_no
 		from mem_interest
 		where mem_no = #{memNo}
 	</select>
 	
 	<!-- [사용자] 서브 카테고리 가져오기 (안세아) -->
 	<select id="selectSubCategoryList" parameterType="int" resultMap="memberCategoryResult">
 		select mem_no, sub_cate_no
 		from mem_category
 		where mem_no = #{memNo}
 	</select>
 	
 	<!-- [사용자] 프로필 이미지 경로 업데이트(안세아) -->
 	<update id="updateProfileImg">
 		update members
 		set 
 			origin_img_name = #{originImgName},
 			change_img_name = #{changeImgName}
 		where
 			mem_no = #{memNo}
 	</update>
 	
 	<!-- [사용자] 멤버의 패스워드 가져오기(안세아) -->
 	<select id="selectMemberPassword" parameterType="int" resultType="string">
 		select mem_pwd
 		from members
 		where mem_no = #{memNo}
 	</select>
 	
 	<!-- [사용자] 멤버의 패스워드 업데이트(안세아) -->
 	<update id="updateMemberPassword">
 		update members
 		set mem_pwd = #{memPwd}
 		where mem_no = #{memNo}
 	</update>
 	
 	<!-- [사용자] 멤버의 닉네임 업데이트(안세아) -->
 	<update id="updateMemberNickname">
 		update members
 		set mem_nickname = #{memNickname}
 		where mem_no = #{memNo}
 	</update>
 	
 	<!-- [사용자] 멤버 이메일 업데이트(안세아) -->
 	<update id="updateMemberEmail">
 		update members
 		set mem_email = #{memEmail}
 		where mem_no = #{memNo}
 	</update>
 	
 	<!-- [사용자] 멤버의 부가정보 업데이트(안세아) -->
 	<update id="updateMemberDetail">
 		update members
 		set mem_post = #{memPost},
 			mem_basic_address = #{memBasicAddress},
 			mem_detail_address = #{memDetailAddress},
 			mem_address_refer = #{memAddressRefer},
 			mem_name = #{memName},
 			mem_phone = #{memPhone},
 			mem_gender = #{memGender},
 			mem_age = #{memAge}
 		where mem_no = #{memNo}
 	</update>
 	
 	<update id="updateMemberStatusDisable">
 		update members
 		set mem_status = 'N'
 		where mem_no = #{memNo}
 	</update>
 	
 	<!-- [관리자] 정기구독 회원 조회 (한진) -->
 	<select id="selectAdminSubscMember" resultMap="memberResult">
 		select distinct
		       mem_name,
		       mem_age,
		       mem_gender,
		       mem_work,
		       mem_level
		  from subscription s
		  join members m using (mem_no)
		  join mem_interest using (mem_no)
		 where subsc_no = #{sNo}
 	</select>
 	
 	<!-- [관리자] 정기구독 회원 interest 조회 (한진) -->
 	<select id="selectAdminSubscInterest" resultMap="memberInterestResult">
 		select
		       interest_content
		  from subscription s
		  join members m using (mem_no)
		  join mem_interest using (mem_no)
		  join interest using (interest_no)
		 where subsc_no = #{sNo}
 	</select>
 	
 	<!-- [관리자] 정기구독 회원 sub_category 조회 (한진) -->
 	<select id="selectAdminSubscCategory" resultMap="memberCategoryResult">
 		select 
		       sub_cate_name
		  from subscription s
		  join members m using (mem_no)
		  join mem_category using (mem_no)
		  join sub_category using (sub_cate_no)
		 where subsc_no = #{sNo}
 	</select>
 	
 	<!-- [관리자] 환불 - 사용된 쿠폰 반환 (한진) -->
 	<update id="updateAdminRefundCoupon">
 		update mem_coupon
 		   set status = 'Y',
 		       use_date = null
 		 where coupon_issue_num = #{refundCoupon}
 	</update>
 	
 	<!-- [사용자] 주소록 리스트 조회 (연지) -->
 	<select id="selectMemPhonebookList" resultMap="memberPhonebookResult">
 		select 
		       phone_no,
		       mem_no,
		       name,
		       post_no,
		       basic_address,
		       detail_address,
		       address_refer,
		       phone,
		       mem_name
		  from phonebook p
		  join members m using (mem_no)
		 where mem_no = #{memNo}
 	</select>
 	
 	<!-- [관리자] 신고 스텍 증가 (김현솔) -->
 	<update id="updateReportStack">
 		update members
 		set report_count = report_count+1
 		where mem_nickname = #{memNickName}
 	</update>
 	
 	<!-- [관리자] 사용자 상태 변경 (김현솔) -->
 	<update id="updateStatus">
 		update members
 		set mem_status = 'N'
 		where mem_no = #{memNo} and report_count >= 3
 	</update>
 	
 	<!-- [사용자] 최근 사용 주소록 조회 (연지) -->
 	<select id="selectRecentPhonebook" resultMap="memberPhonebookResult">
 		select order_receiver mem_name,
 			   order_post post_no,
 			   order_address basic_address,
 			   address_detail detail_address,
 			   address_ref address_refer,
 			   order_phone phone
		  from orders
		 where order_no = (select order_no
		                   from (select order_no
		                         from orders
		                         where mem_no = #{memNo}
		                         order by order_date desc)
		                   where rownum = 1)
 	</select>
 	
 	<!-- [사용자] 보유 포인트 조회 (연지) -->
 	<select id="selectMemPoint" resultMap="pointResult">
 		select point_no,
 			   mem_no,
 			   order_no,
 			   subsc_no,
 			   point_content,
 			   point_price,
 			   occurrence_date
		  from point
		 where mem_no = #{memNo}
 	</select>

</mapper>
