<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="csMapper">

	<resultMap id="cancelResult" type="Cancel">
		<result column="cancel_no" property="cancelNo"/>
		<result column="order_no" property="orderNo"/>
		<result column="cancel_reason" property="cancelReason"/>
		<result column="cancel_date" property="cancelDate"/>
		<result column="status" property="status"/>
		<result column="admin_memo" property="adminMemo"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_name" property="memName"/>
		<result column="pay_way" property="payWay"/>
		<result column="price" property="price"/>
		<result column="bk_title" property="bkTitle"/>
		<result column="delivery_msg" property="deliveryMsg"/>
	</resultMap>
	
	<resultMap id="refundResult" type="Refund">
		<result column="refund_no" property="refundNo"/>
		<result column="order_no" property="orderNo"/>
		<result column="status" property="status"/>
		<result column="refund_date" property="refundDate"/>
		<result column="admin_memo" property="adminMemo"/>
		<result column="refund_kind" property="refundKind"/>
		<result column="kind_no" property="kindNo"/>
		<result column="refund_price" property="refundPrice"/>
		<result column="refund_point" property="refundPoint"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_name" property="memName"/>
		<result column="pay_way" property="payWay"/>
		<result column="price" property="price"/>
		<result column="bk_title" property="bkTitle"/>
		<result column="delivery_msg" property="deliveryMsg"/>
	</resultMap>
	
	<resultMap id="returnResult" type="Return">
		<result column="return_no" property="returnNo"/>
		<result column="order_no" property="orderNo"/>
		<result column="return_reason" property="returnReason"/>
		<result column="return_date" property="returnDate"/>
		<result column="status" property="status"/>
		<result column="admin_memo" property="adminMemo"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_name" property="memName"/>
		<result column="pay_way" property="payWay"/>
		<result column="price" property="price"/>
		<result column="bk_title" property="bkTitle"/>
		<result column="delivery_msg" property="deliveryMsg"/>
	</resultMap>
	
	<!-- [관리자] '주문취소' 목록 개수 조회 (한진) -->
	<select id="selectAdminCancelCount" resultType="_int">
		select
			   count(*)
		  from cancel
	</select>
	
	<!-- [관리자] '반품' 목록 개수 조회 (한진) -->
	<select id="selectAdminReturnCount" resultType="_int">
		select
		       count(*)
		  from return
	</select>
	
	<!-- [관리자] '환불' 목록 개수 조회 (한진) -->
	<select id="selectAdminRefundCount" resultType="_int">
		select
		       count(*)
		  from refund
	</select>
	
	<!-- [관리자] '주문취소' 목록 조회 (한진) -->
	<select id="selectAdminCancelList" resultMap="cancelResult">
		select s1.*
		  from (
		         select
		                row_number() over(partition by cancel_no order by cancel_date desc) rnum,
		                t1.*
		           from (
		                  select 
                                 cancel_no,
                                 order_no,
                                 cancel_reason,
                                 cancel_date,
                                 c.status,
                                 c.admin_memo,
                                 delivery_msg,
                                 m.mem_id,
                                 mem_name,
                                 pay_way,
                                 price,
                                 bk_title
		                    from cancel c
		                    join orders using(order_no)
                            join members m using(mem_no)
		                    join payment using(pay_no)
		                    join order_detail using(order_no)
		                    join book using(bk_no)
		                ) t1            
		        ) s1
		  where s1.rnum = 1
		  order
		     by
		 <choose>
		 	<when test="array == 0">
		 		cancel_date desc
		 	</when> 
		 	<when test="array == 1">
		 		cancel_date asc
		 	</when>	
		 </choose> 
	</select>
	
	<!-- [관리자] '반품' 목록 조회 (한진) -->
	<select id="selectAdminReturnList" resultMap="returnResult">
		select s1.*
		  from (
		         select
		                row_number() over(partition by return_no order by return_date desc) rnum,
		                t1.*
		           from (
		                  select 
                                 return_no,
                                 order_no,
                                 mem_name,
                                 mem_id,
                                 bk_title,
                                 pay_way,
                                 price,
                                 return_reason,
                                 return_date,
                                 r.status,
                                 r.admin_memo,
                                 delivery_msg
		                    from return r
		                    join orders using(order_no)
                            join members m using(mem_no)
		                    join payment using(pay_no)
		                    join order_detail using(order_no)
		                    join book using(bk_no)
		                ) t1            
		        ) s1
		  where s1.rnum = 1
		 order
		    by 
		 <choose>
		 	<when test="array == 0">
		 		return_date desc
		 	</when> 
		 	<when test="array == 1">
		 		return_date asc
		 	</when>	
		 </choose> 
	</select>
	
	<!-- [관리자] '환불' 목록 조회 (한진) -->
	<select id="selectAdminRefundList" resultMap="refundResult">
		select s1.*
		  from (
		         select
		                row_number() over(partition by refund_no order by refund_date desc) rnum,
		                t1.*
		           from (
		                  select 
                                   refund_no,
                                   order_no,
                                   mem_name,
                                   mem_id,
                                   bk_title,
                                   pay_way,
                                   price,
                                   r.status,
                                   refund_date,
                                   r.admin_memo,
                                   refund_kind,
                                   kind_no,
                                   refund_price,
                                   refund_point,
                                   delivery_msg
		                    from refund r
		                    join orders using(order_no)
                            join members m using(mem_no)
		                    join payment using(pay_no)
		                    join order_detail using(order_no)
		                    join book using(bk_no)
		                ) t1            
		        ) s1
		  where s1.rnum = 1
		  order
		    by 
		 <choose>
		 	<when test="array == 0">
		 		refund_date desc
		 	</when> 
		 	<when test="array == 1">
		 		refund_date asc
		 	</when>	
		 </choose> 
	</select>
	
	<!-- [관리자] 검색조건에 일치하는 CS목록 개수 조회 (한진) -->
	<select id="selectAdminSearchCount" resultType="_int">
		select
		       count(*)
		  from
		<choose>
			<when test="cStatus == 1">
				cancel	
			</when>
			<when test="cStatus == 2">
				return
			</when>
			<when test="cStatus == 3">
				refund
			</when>
		</choose>
		  join orders using(order_no)
          join members m using(mem_no)
		 where
		<choose>
			<when test="cStatus == 1">
				<choose>
					<when test="condition == 'searchAll'">
						   order_no like '%' || #{keyword} || '%'
						or cancel_no like '%' || #{keyword} || '%'
						or mem_name like '%' || #{keyword} || '%'
						or mem_id 
					</when>
					<when test="condition == 'cancelNo'">
						   cancel_no 
					</when>
					<when test="condition == 'orderNo'">
						   order_no 
					</when>
					
					<when test="condition == 'memName'">
						   mem_name 
					</when>
					<when test="condition == 'memId'">
						   mem_id 
					</when>
				</choose>
			</when>
			<when test="cStatus == 2">
				<choose>
					<when test="condition == 'searchAll'">
						   order_no like '%' || #{keyword} || '%'
						or return_no like '%' || #{keyword} || '%'
						or mem_name like '%' || #{keyword} || '%'
						or mem_id 
					</when>
					<when test="condition == 'returnNo'">
						   return_no 
					</when>
					<when test="condition == 'orderNo'">
						   order_no 
					</when>
					
					<when test="condition == 'memName'">
						   mem_name 
					</when>
					<when test="condition == 'memId'">
						   mem_id 
					</when>
				</choose>
			</when>
			<when test="cStatus == 3">
				<choose>
					<when test="condition == 'searchAll'">
						   order_no like '%' || #{keyword} || '%'
						or refund_no like '%' || #{keyword} || '%'
						or mem_name like '%' || #{keyword} || '%'
						or mem_id 
					</when>
					<when test="condition == 'refundNo'">
						   refund_no 
					</when>
					<when test="condition == 'orderNo'">
						   order_no 
					</when>
					
					<when test="condition == 'memName'">
						   mem_name 
					</when>
					<when test="condition == 'memId'">
						   mem_id 
					</when>
				</choose>
			</when>
		</choose>
		like '%' || #{keyword} || '%'
	</select>
	
	<!-- [관리자] 검색조건에 일치하는 '주문취소'목록 조회 (한진) -->
	<select id="selectAdminSearchCancelList" resultMap="cancelResult">
		select s1.*
		  from (
		         select
		                row_number() over(partition by cancel_no order by cancel_date desc) rnum,
		                t1.*
		           from (
		                  select 
                                 cancel_no,
                                 order_no,
                                 cancel_reason,
                                 cancel_date,
                                 c.status,
                                 c.admin_memo,
                                 delivery_msg,
                                 m.mem_id,
                                 mem_name,
                                 pay_way,
                                 price,
                                 bk_title
		                    from cancel c
		                    join orders using(order_no)
                            join members m using(mem_no)
		                    join payment using(pay_no)
		                    join order_detail using(order_no)
		                    join book using(bk_no)
		                ) t1            
		        ) s1
		  where s1.rnum = 1
		  <choose>
			<when test="condition == 'searchAll'">
			   and order_no like '%' || #{keyword} || '%'
				or cancel_no like '%' || #{keyword} || '%'
				or mem_name like '%' || #{keyword} || '%'
				or mem_id
			</when>
			<when test="condition == 'orderNo'">
			   and order_no 
			</when>
			<when test="condition == 'cancelNo'">
			   and cancel_no 
			</when>
			<when test="condition == 'memName'">
			   and mem_name 
			</when>
			<when test="condition == 'memId'">
			   and mem_id 
			</when>
		</choose>
				like '%' || #{keyword} || '%'
		  order
		     by
		 <choose>
		 	<when test="array == 0">
		 		cancel_date desc
		 	</when> 
		 	<when test="array == 1">
		 		cancel_date asc
		 	</when>	
		 </choose> 
	</select>
	
	<!-- [관리자] 검색조건에 일치하는 '반품'목록 조회 (한진) -->
	<select id="selectAdminSearchReturnList" resultMap="returnResult">
		select s1.*
		  from (
		         select
		                row_number() over(partition by return_no order by return_date desc) rnum,
		                t1.*
		           from (
		                  select 
                                 return_no,
                                 order_no,
                                 mem_name,
                                 mem_id,
                                 bk_title,
                                 pay_way,
                                 price,
                                 return_reason,
                                 return_date,
                                 r.status,
                                 r.admin_memo,
                                 delivery_msg
		                    from return r
		                    join orders using(order_no)
                            join members m using(mem_no)
		                    join payment using(pay_no)
		                    join order_detail using(order_no)
		                    join book using(bk_no)
		                ) t1            
		        ) s1
		  where s1.rnum = 1
		  <choose>
			<when test="condition == 'searchAll'">
			   and order_no like '%' || #{keyword} || '%'
				or return_no like '%' || #{keyword} || '%'
				or mem_name like '%' || #{keyword} || '%'
				or mem_id
			</when>
			<when test="condition == 'orderNo'">
			   and order_no 
			</when>
			<when test="condition == 'returnNo'">
			   and return_no 
			</when>
			<when test="condition == 'memName'">
			   and mem_name 
			</when>
			<when test="condition == 'memId'">
			   and mem_id 
			</when>
		</choose>
				like '%' || #{keyword} || '%'
		 order
		    by 
		 <choose>
		 	<when test="array == 0">
		 		return_date desc
		 	</when> 
		 	<when test="array == 1">
		 		return_date asc
		 	</when>	
		 </choose> 
	</select>
	
	<!-- [관리자] 검색조건에 일치하는 '환불' 목록 조회 (한진) -->
	<select id="selectAdminSearchRefundList" resultMap="refundResult">
		select s1.*
		  from (
		         select
		                row_number() over(partition by refund_no order by refund_date desc) rnum,
		                t1.*
		           from (
		                  select 
                                 refund_no,
                                   order_no,
                                   mem_name,
                                   mem_id,
                                   bk_title,
                                   pay_way,
                                   price,
                                   r.status,
                                   refund_date,
                                   r.admin_memo,
                                   refund_kind,
                                   kind_no,
                                   refund_price,
                                   refund_point,
                                   delivery_msg
		                    from refund r
		                    join orders using(order_no)
                            join members m using(mem_no)
		                    join payment using(pay_no)
		                    join order_detail using(order_no)
		                    join book using(bk_no)
		                ) t1            
		        ) s1
		  where s1.rnum = 1
		  <choose>
			<when test="condition == 'searchAll'">
			   and order_no like '%' || #{keyword} || '%'
				or refund_no like '%' || #{keyword} || '%'
				or mem_name like '%' || #{keyword} || '%'
				or mem_id
			</when>
			<when test="condition == 'orderNo'">
			   and order_no 
			</when>
			<when test="condition == 'refundNo'">
			   and refund_no 
			</when>
			<when test="condition == 'memName'">
			   and mem_name 
			</when>
			<when test="condition == 'memId'">
			   and mem_id 
			</when>
		</choose>
				like '%' || #{keyword} || '%'
		  order
		     by
		<choose>
		 	<when test="array == 0">
		 		refund_date desc
		 	</when> 
		 	<when test="array == 1">
		 		refund_date asc
		 	</when>	
		 </choose> 
	</select>
	
	<!-- [관리자] 주문취소 상세 조회 (한진) -->
	<select id="selectAdminCancelDetail" resultMap="cancelResult">
		select 
		       cancel_no,
		       order_no,
		       cancel_reason,
		       cancel_date,
		       status,
		       admin_memo
		  from cancel 
		 where cancel_no = #{cancelNo}
	</select>
	
	<!-- [관리자] 주문취소 - orders테이블 상태 변경 (한진) -->
	<update id="updateAdminCsOrderStatus">
		update
		       orders
		   set 
		   <choose>
		   		<when test="no == 1">
		   			order_status = '주문취소',
		       		cs_status = '주문취소'
		   		</when>
		   		<when test="rtStatus == 1">
		   			order_status = '반품',
		   			cs_status = '반품처리중'
		   		</when>
		   		<when test="rtStatus == 2">
		   			order_status = '반품',
		   			cs_status = '반품완료'
		   		</when>
		   </choose>
		 where order_no = #{orderNo}
	</update>
	
	<!-- [관리자] 주문취소 - cancel테이블 상태 변경 (한진) -->
	<update id="insertAdminCancelStatus">
		update
		       cancel
		   set status = '취소완료'
		 where cancel_no = #{cancelNo}
	</update>
	
	<!-- [관리자] 반품 상세 조회 (한진) -->
	<select id="selectAdminReturnDetail" resultMap="returnResult">
		select
		       return_no,
		       order_no,
		       return_reason,
		       return_date,
		       status,
		       admin_memo
		  from return
		 where return_no = #{returnNo}
	</select>
	
	<!-- [관리자] 반품 상태 변경(한진) -->
	<update id="updateAdminReturnStatus">
		update
		       return
		   set
		   <choose>
		   		<when test="rtStatus == 1">
		   			status = '반품처리중'
		   		</when>
		   		<when test="rtStatus == 2">
		   			status = '반품완료'
		   		</when>
		   </choose>
	</update>
	
</mapper>